{
  "model": "anthropic:claude-3-7-sonnet-latest",
  "system": "\nYou are creating a simple MVP based on the user's goal, using an existing data schema. Focus on the simplest implementation that works with the provided schema.\n\n<task>\nGiven a user's feature request and an existing data schema, you will:\n1. Create a short title (2-5 words) that names the artifact\n2. Create a one-sentence description in the format \"A <artifact> to <goal>\"\n3. Create a concise specification (3-5 sentences max) that works with the existing schema\n4. Generate a brief implementation plan (3 steps max)\n5. Design a minimal JSON schema that represents the core data model\n</task>\n\n<output_structure>\nYour response must be structured as follows:\n\n<thinking>Freeform reasoning for you to consider the solution.</thinking>\n\n<title>\n[Short title for the artifact, 2-5 words]\n</title>\n\n<description>\n[One-sentence description in the format \"A <artifact> to <goal>\"]\n</description>\n\n<spec>\n[Concise specification that captures only the essential requirements]\n</spec>\n\n<plan>\n[Brief 3-step implementation plan using the existing schema]\n</plan>\n\n<result_schema>\n[Minimal JSON Schema in valid JSON format that represents data created by the artifact]\n</result_schema>\n</output_structure>\n\n<schema_guidelines>\n1. Keep it minimal:\n   - Include only essential fields (5-7 properties max)\n   - Focus on the core functionality\n   - If user requested complex features, simplify for this first version\n\n2. Each property should have:\n   - A descriptive \"title\" field\n   - A brief \"description\" field\n   - A sensible default value where appropriate\n\n3. Example of a simple schema:\n```json\n{\n  \"type\": \"object\",\n  \"title\": \"Note List\",\n  \"description\": \"A simple note list for the user\",\n  \"properties\": {\n    \"notes\": {\n      \"type\": \"array\",\n      \"title\": \"Notes\",\n      \"description\": \"List of user notes\",\n      \"default\": [],\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"title\": \"Title\",\n            \"description\": \"Title of the note\",\n            \"default\": \"New Note\"\n          },\n          \"content\": {\n            \"type\": \"string\",\n            \"title\": \"Content\",\n            \"description\": \"Content of the note\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"title\": \"Created Date\",\n            \"description\": \"When the note was created\"\n          }\n        },\n        \"required\": [\"title\", \"content\"]\n      }\n    }\n  },\n  \"required\": [\"title\", \"content\"]\n}\n```\n\nGUIDELINES:\n- Aim for the simplest possible solution that works with the existing schema\n- The specification should take into account the existing schema structure\n- Focus on what can be achieved quickly with the existing data model\n- Avoid suggesting modifications to the schema if possible\n</schema_guidelines>\n\n<high_level>\nIMPORTANT:\n- Focus on the simplest working version\n- Aim for fewer fields rather than more\n- But still capture all the important state the user is creating\n- The user can always iterate and improve the solution later\n</high_level>\n",
  "stream": false,
  "messages": [
    {
      "role": "user",
      "content": "\n<user_input>\n\n<goal>show the data from `simpleValue2`</goal>\n\n<description>Show the data from the `simpleValue2` charm, displaying its current value and any associated metadata.</description>\n\n</user_input>\n\n<existing_schema>\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"simplevalue2\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"values\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    }\n  }\n}\n```\n</existing_schema>\n\nBased on this goal and the existing schema, please provide a title, description, any additional schema, detailed specification, and implementation plan.\n"
    },
    {
      "role": "assistant",
      "content": "<thinking>\nLet me analyze the user's request and the existing schema:\n\n1. The user wants to display data from a \"simpleValue2\" charm.\n2. The existing schema shows that \"simplevalue2\" (lowercase) is an object with a \"values\" property that contains an array of strings.\n3. The user wants to see the current value and any associated metadata.\n\nLooking at the schema, there doesn't seem to be explicit metadata fields, just the values array. The artifact I'll create will be a simple viewer component that displays the values from the simpleValue2 charm.\n\nSince this is a simple display component, I'll focus on creating a viewer that shows the array of string values in a clean, readable format.\n</thinking>\n\n<title>\nSimpleValue2 Viewer\n</title>\n\n<description>\nA component to display the current values stored in the simpleValue2 charm.\n</description>\n\n<spec>\nThe SimpleValue2 Viewer will display all string values stored in the simpleValue2.values array. It will present each value as a list item with appropriate styling for readability. If the values array is empty, it will display a message indicating no data is available.\n</spec>\n\n<plan>\n1. Retrieve the simpleValue2 object from the existing schema\n2. Extract and format the values array for display\n3. Render the values in a clean, organized list view\n</plan>\n\n<result_schema>\n{\n  \"type\": \"object\",\n  \"title\": \"SimpleValue2 Viewer\",\n  \"description\": \"Display component for simpleValue2 data\",\n  \"properties\": {\n    \"displayData\": {\n      \"type\": \"object\",\n      \"title\": \"Display Data\",\n      \"description\": \"Formatted data for display\",\n      \"properties\": {\n        \"values\": {\n          \"type\": \"array\",\n          \"title\": \"Values\",\n          \"description\": \"List of string values from simpleValue2\",\n          \"default\": [],\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"isEmpty\": {\n          \"type\": \"boolean\",\n          \"title\": \"Is Empty\",\n          \"description\": \"Indicates if there are no values to display\",\n          \"default\": true\n        },\n        \"count\": {\n          \"type\": \"integer\",\n          \"title\": \"Count\",\n          \"description\": \"Number of values in the array\",\n          \"default\": 0\n        }\n      },\n      \"required\": [\"values\", \"isEmpty\", \"count\"]\n    }\n  },\n  \"required\": [\"displayData\"]\n}\n</result_schema>"
    }
  ],
  "maxTokens": 64000
}