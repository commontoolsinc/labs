
Fixes #832

## Enhanced iframe write throttling with adaptive processing time

### What was fixed
Fixed issue #832 where large data writes to iframes were overwhelming the system despite existing frequency-based throttling. The problem occurred when applications generated frequent, large writes (around 500 writes/second) that needed more intelligent throttling based on both frequency and processing time.

### How it was fixed
Implemented an adaptive throttling system that considers both write frequency and data processing time:

1. Added tracking for write processing time and last successful write time
2. Created adaptive throttling that scales with data processing complexity:
   - Immediately throttles writes when processing is detected as slow
   - Adjusts throttling intervals proportionally to processing time
   - Guarantees writes happen at least every 10 seconds (configurable via `MAX_WRITE_DELAY_MS`)
3. Reset counters based on adaptive timers rather than fixed intervals

### Technical details
- Added processing time measurement using `performance.now()`
- Implemented "slow processing" detection when processing time exceeds 1/3 of the throttle interval
- Created adaptive reset times (1-10 seconds) based on processing time
- Calculated throttle intervals dynamically (minimum 100ms, scaling up to 3x the processing time)
- Added forced writes when the time since last write exceeds maximum delay (10s)

### Testing considerations
- Test with large data payloads (similar to those in the original issue report)
- Verify throttling behavior scales correctly with processing time
- Confirm that slow or large writes don't overwhelm the system
- Validate that data is still eventually written even during heavy throttling (within 10s)
- Check that UI remains responsive during processing of large writes


This PR was created with Claude Code assistance.
