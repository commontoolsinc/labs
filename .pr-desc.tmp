
Fixes #790

Now let me prepare a PR description based on the changes:

## Fix: Resolve race condition in CharmDetailView suggestions (#790)

### What was fixed
Fixed a race condition in the CharmDetailView component that was causing suggestion clicks to sometimes regenerate the same prompt instead of using the newly selected suggestion. This issue occurred because state updates were not fully applied before the operation was performed.

### How it was fixed
- Replaced the asynchronous `setTimeout` approach with React's `flushSync` API
- Wrapped all state updates in a `flushSync` callback to ensure they are applied synchronously
- Moved the `handlePerformOperation` call outside the `flushSync` block to execute after all state changes are guaranteed to be committed

### Technical details
The previous implementation used a zero-delay timeout (`setTimeout(..., 0)`) as a workaround to ensure state updates were processed before performing operations. This approach was unreliable due to React's batched state updates and the asynchronous nature of `setTimeout`, leading to occasional race conditions.

By using `flushSync` from React DOM, we force React to flush all state updates synchronously, ensuring that when `handlePerformOperation` is called, it has access to the most current state values, including the newly selected suggestion.

### Testing considerations
- Verify that clicking on suggestions consistently applies the correct suggestion prompt
- Test with different suggestion types (both "extend" and other types) to ensure operation type is set correctly
- Check that variants are properly displayed after selecting a suggestion


This PR was created with Claude Code assistance.
