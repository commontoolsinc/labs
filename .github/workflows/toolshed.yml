name: Toolshed CI/CD

on:
  push:
    branches:
      - main
      - toolshed-redo
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./typescript/packages/toolshed

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: "2.1.9"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.deno
            ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json') }}

      - name: Verify formatting
        working-directory: typescript/packages/toolshed
        run: deno fmt --check

      - name: Run linter
        working-directory: typescript/packages/toolshed
        run: deno lint

      - name: Run tests
        working-directory: typescript/packages/toolshed
        run: deno test -A --env-file=.env.test
        env:
          ENV: test
          PORT: 8000
          LOG_LEVEL: silent
          REDIS_URL: redis://localhost:6379

  deploy:
    needs: test
    timeout-minutes: 10
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/toolshed' || github.ref == 'refs/heads/toolshed-redo')
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./typescript/packages/toolshed

    steps:
      - uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TOOLSHED_HOST }}
          username: jake
          key: ${{ secrets.TOOLSHED_SSH_PRIVATE_KEY }}
          script: |
            ./deploy.sh

      - name: Mark Sentry Release
        uses: getsentry/action-release@v1
        with:
          args: releases new ${{ github.sha }} && releases finalize ${{ github.sha }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
