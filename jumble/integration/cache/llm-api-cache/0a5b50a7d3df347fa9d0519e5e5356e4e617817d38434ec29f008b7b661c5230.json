{
  "model": "anthropic:claude-3-7-sonnet-latest",
  "system": "\nYou are creating a simple minimal viable product (MVP) based on a user's goal. Focus on the simplest implementation that works.\n\nGiven a user's feature request, you will:\n1. Create a short title (2-5 words) that names the artifact\n2. Create a one-sentence description in the format \"A <artifact> to <goal>\"\n3. Create a concise specification (3-5 sentences max)\n4. Generate a brief implementation plan (3 steps max)\n5. Design a minimal JSON schema that represents the core data model\n\nYour response must be structured as follows:\n\n<title>\n[Short title for the artifact, 2-5 words]\n</title>\n\n<description>\n[One-sentence description in the format \"A <artifact> to <goal>\"]\n</description>\n\n<spec>\n[Concise specification that captures only the essential requirements]\n</spec>\n\n<plan>\n[Brief 3-step implementation plan]\n</plan>\n\n<argument_schema>\n[Minimal JSON Schema in valid JSON format that represents the core data model]\n</argument_schema>\n\n<example_data>\n[Simple example data that conforms to the schema]\n</example_data>\n\nSCHEMA GUIDELINES:\n1. Keep it minimal:\n   - Include only essential fields (5-7 properties max)\n   - Focus on the core functionality\n   - If user requested complex features, simplify for this first version\n   \n2. Each property should have:\n   - A descriptive \"title\" field\n   - A brief \"description\" field\n   - A sensible default value where appropriate\n   \n3. Example of a simple schema:\n```json\n{\n  \"type\": \"object\",\n  \"title\": \"Note\",\n  \"description\": \"A simple note for the user\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"title\": \"Title\",\n      \"description\": \"Title of the note\",\n      \"default\": \"New Note\"\n    },\n    \"content\": {\n      \"type\": \"string\",\n      \"title\": \"Content\",\n      \"description\": \"Content of the note\"\n    },\n    \"created\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"title\": \"Created Date\",\n      \"description\": \"When the note was created\",\n    }\n  },\n  \"required\": [\"title\", \"content\"]\n}\n```\n\nIMPORTANT:\n- Focus on the simplest working version\n- Aim for fewer fields rather than more\n- But still capture all the important state the user is creating\n- Remember, the user can always iterate and improve the solution later\n",
  "stream": false,
  "messages": [
    {
      "role": "user",
      "content": "[{\"type\":\"paragraph\",\"children\":[{\"text\":\"count of values\"}]}]"
    },
    {
      "role": "assistant",
      "content": "<title>\nValue Counter\n</title>\n\n<description>\nA tool to count and track the frequency of values.\n</description>\n\n<spec>\nThe Value Counter allows users to track occurrences of different values or items. It maintains a running tally of each unique value entered and displays the current count for each. The counter should support adding new values, incrementing existing ones, and viewing the complete count distribution.\n</spec>\n\n<plan>\n1. Create a data structure to store unique values and their counts\n2. Implement functions to add/increment values and retrieve counts\n3. Build a simple interface to display and manage the value counts\n</plan>\n\n<argument_schema>\n{\n  \"type\": \"object\",\n  \"title\": \"ValueCounter\",\n  \"description\": \"Tracks the frequency of different values\",\n  \"properties\": {\n    \"counts\": {\n      \"type\": \"object\",\n      \"title\": \"Counts\",\n      \"description\": \"Map of values to their occurrence counts\",\n      \"additionalProperties\": {\n        \"type\": \"integer\",\n        \"minimum\": 0\n      },\n      \"default\": {}\n    },\n    \"totalCount\": {\n      \"type\": \"integer\",\n      \"title\": \"Total Count\",\n      \"description\": \"Sum of all value occurrences\",\n      \"minimum\": 0,\n      \"default\": 0\n    },\n    \"lastUpdated\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"title\": \"Last Updated\",\n      \"description\": \"When the counter was last modified\"\n    }\n  },\n  \"required\": [\"counts\", \"totalCount\"]\n}\n</argument_schema>\n\n<example_data>\n{\n  \"counts\": {\n    \"red\": 5,\n    \"blue\": 3,\n    \"green\": 7,\n    \"yellow\": 2\n  },\n  \"totalCount\": 17,\n  \"lastUpdated\": \"2023-05-15T14:30:45Z\"\n}\n</example_data>"
    },
    {
      "role": "assistant",
      "content": "<title>\nValue Counter\n</title>\n\n<description>\nA tool to count and track the frequency of values.\n</description>\n\n<spec>\nThe Value Counter allows users to track occurrences of different values or items. It maintains a running tally of each unique value entered and displays the current count for each. The counter should support adding new values, incrementing existing ones, and viewing the complete count distribution.\n</spec>\n\n<plan>\n1. Create a data structure to store unique values and their counts\n2. Implement functions to add/increment values and retrieve counts\n3. Build a simple interface to display and manage the value counts\n</plan>\n\n<argument_schema>\n{\n  \"type\": \"object\",\n  \"title\": \"ValueCounter\",\n  \"description\": \"Tracks the frequency of different values\",\n  \"properties\": {\n    \"counts\": {\n      \"type\": \"object\",\n      \"title\": \"Counts\",\n      \"description\": \"Map of values to their occurrence counts\",\n      \"additionalProperties\": {\n        \"type\": \"integer\",\n        \"minimum\": 0\n      },\n      \"default\": {}\n    },\n    \"totalCount\": {\n      \"type\": \"integer\",\n      \"title\": \"Total Count\",\n      \"description\": \"Sum of all value occurrences\",\n      \"minimum\": 0,\n      \"default\": 0\n    },\n    \"lastUpdated\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"title\": \"Last Updated\",\n      \"description\": \"When the counter was last modified\"\n    }\n  },\n  \"required\": [\"counts\", \"totalCount\"]\n}\n</argument_schema>\n\n<example_data>\n{\n  \"counts\": {\n    \"red\": 5,\n    \"blue\": 3,\n    \"green\": 7,\n    \"yellow\": 2\n  },\n  \"totalCount\": 17,\n  \"lastUpdated\": \"2023-05-15T14:30:45Z\"\n}\n</example_data>"
    }
  ]
}