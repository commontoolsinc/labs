{
  "model": "anthropic:claude-3-7-sonnet-latest",
  "system": "\nYou are creating a simple MVP based on the user's goal, using an existing data schema. Focus on the simplest implementation that works with the provided schema.\n\nGiven a user's feature request and an existing data schema, you will:\n1. Create a short title (2-5 words) that names the artifact\n2. Create a one-sentence description in the format \"A <artifact> to <goal>\"\n3. Create a concise specification (3-5 sentences max) that works with the existing schema\n4. Generate a brief implementation plan (3 steps max)\n\nYour response must be structured as follows:\n\n<title>\n[Short title for the artifact, 2-5 words]\n</title>\n\n<description>\n[One-sentence description in the format \"A <artifact> to <goal>\"]\n</description>\n\n<spec>\n[Concise specification that captures only the essential requirements]\n</spec>\n\n<plan>\n[Brief 3-step implementation plan using the existing schema]\n</plan>\n\nGUIDELINES:\n- Aim for the simplest possible solution that works with the existing schema\n- The specification should take into account the existing schema structure\n- Focus on what can be achieved quickly with the existing data model\n- Avoid suggesting modifications to the schema if possible\n\nIMPORTANT:\n- Focus on the simplest working version\n- The user can always iterate and improve the solution later\n",
  "stream": false,
  "messages": [
    {
      "role": "user",
      "content": "\nGoal: count of values\n\nExisting Schema:\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"values\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"updater\": {\n      \"asStream\": true,\n      \"type\": \"object\",\n      \"properties\": {\n        \"newValues\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"title\": \"Update Values\",\n      \"description\": \"Append `newValues` to the list.\",\n      \"example\": {\n        \"newValues\": [\n          \"foo\",\n          \"bar\"\n        ]\n      },\n      \"default\": {\n        \"newValues\": []\n      }\n    },\n    \"$UI\": {\n      \"type\": \"object\"\n    },\n    \"$NAME\": {\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nBased on this goal and the existing schema, please provide a title, description, detailed specification, and implementation plan.\n"
    },
    {
      "role": "assistant",
      "content": "<title>\nValues Counter\n</title>\n\n<description>\nA component to display the count of values in the array.\n</description>\n\n<spec>\nThe Values Counter will display the total number of items in the \"values\" array. It will update automatically whenever new values are added through the \"updater\" stream. The counter will be displayed in the UI with a simple label indicating the count.\n</spec>\n\n<plan>\n1. Add a computed property to the UI object that calculates the length of the values array.\n2. Create a display element in the UI that shows the count with an appropriate label.\n3. Ensure the count updates reactively when new values are added through the updater stream.\n</plan>"
    },
    {
      "role": "assistant",
      "content": "<title>\nValues Counter\n</title>\n\n<description>\nA component to display the count of values in the array.\n</description>\n\n<spec>\nThe Values Counter will display the total number of items in the \"values\" array. It will update automatically whenever new values are added through the \"updater\" stream. The counter will be displayed in the UI with a simple label indicating the count.\n</spec>\n\n<plan>\n1. Add a computed property to the UI object that calculates the length of the values array.\n2. Create a display element in the UI that shows the count with an appropriate label.\n3. Ensure the count updates reactively when new values are added through the updater stream.\n</plan>"
    }
  ]
}