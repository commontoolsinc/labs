# /etc/nginx/sites-enabled/toolshed.conf

# Trust all proxies (adjust as needed)
set_real_ip_from 0.0.0.0/0;
real_ip_header X-Forwarded-For;
real_ip_recursive on;

# Map backend_choice to just the port number for the header.
map $backend_choice $served_from {
    "127.0.0.1:8001" "8001";
    "127.0.0.1:8002" "8002";
    "127.0.0.1:8003" "8003";
    "127.0.0.1:8004" "8004";
    "127.0.0.1:8005" "8005";
}

# Use the space query parameter as the sticky value
map $arg_space $sticky_value {
    ""      $remote_addr;  # Fall back to client IP if space parameter is not present
    default $arg_space;    # Use the space parameter value
}

# Deterministically assign a backend server based on the sticky value.
split_clients "$sticky_value" $backend_choice {
    20%   127.0.0.1:8001;
    20%   127.0.0.1:8002;
    20%   127.0.0.1:8003;
    20%   127.0.0.1:8004;
    20%   127.0.0.1:8005;
}

# Map for handling the upgrade header.
map $http_upgrade $connection_upgrade {
    default Upgrade;
    ''      close;
}

server {
    listen 8080;
    server_name localhost;

    location / {
        add_header X-Served-From $served_from always;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Tailscale-User-Login $http_tailscale_user_login;
        proxy_pass http://$backend_choice;
        # 5min timeout
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    location /api/storage/memory {
        proxy_pass http://$backend_choice;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Tailscale-User-Login $http_tailscale_user_login;
        add_header X-Served-From $served_from always;

        # Increase timeouts for long-lived WebSocket connections.
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    # Expose Nginx status at /_nginx.
    location /_nginx {
        # Enable the stub_status module.
        stub_status;
        # Optionally, restrict access to this endpoint.
        # For example, only allow local connections:
        # Allow all devices on the Tailscale network.
        allow 100.64.0.0/10;
        allow 127.0.0.1;
        allow ::1;
        deny all;
    }
}